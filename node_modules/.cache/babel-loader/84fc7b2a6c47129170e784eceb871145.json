{"ast":null,"code":"var _jsxFileName = \"/Users/lukeflannery/Documents/Northcoders_work/FRONT/Week9/flannery-nc-news-react/src/components/Comments/comments.js\";\nimport React from \"react\";\nimport * as api from \"../../utils/api\";\nimport CommentCard from \"./comment.card\";\nimport CommentForm from \"./comment.form\";\nimport ErrorDisplay from \"../ErrorDisplay\";\nimport LoadingSign from \"../Loading/LoadingSign\";\n\nclass Comments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isLoading: true,\n      err: \"\"\n    };\n\n    this.deleteComment = index => {\n      this.setState(currState => {\n        const copyArr = [...currState.comments];\n        copyArr.splice(index, 1);\n        return {\n          comments: copyArr\n        };\n      });\n    };\n\n    this.addStateComment = newComment => {\n      this.setState(currState => {\n        return {\n          comments: [newComment, ...currState.comments]\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n  render() {\n    const {\n      comments,\n      isLoading,\n      err\n    } = this.state;\n    const {\n      article_id,\n      user\n    } = this.props;\n    if (isLoading) return /*#__PURE__*/React.createElement(LoadingSign, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }\n    });\n    if (err) return /*#__PURE__*/React.createElement(ErrorDisplay, {\n      err: err,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CommentForm, {\n      addStateComment: this.addStateComment,\n      article_id: article_id,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      key: comments.comment_id,\n      className: \"artComList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, comments.map(comment => {\n      return /*#__PURE__*/React.createElement(CommentCard, {\n        comment: comment,\n        key: comment.comment_id,\n        deleteComment: this.deleteComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      });\n    })));\n  }\n\n  fetchComments() {\n    const {\n      article_id\n    } = this.props;\n    api.getArticleComment(article_id).then(comments => {\n      this.setState({\n        comments,\n        isLoading: false\n      });\n    }).catch(err => {\n      this.setState({\n        isLoading: false,\n        err: err.data\n      });\n    });\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/lukeflannery/Documents/Northcoders_work/FRONT/Week9/flannery-nc-news-react/src/components/Comments/comments.js"],"names":["React","api","CommentCard","CommentForm","ErrorDisplay","LoadingSign","Comments","Component","state","comments","isLoading","err","deleteComment","index","setState","currState","copyArr","splice","addStateComment","newComment","componentDidMount","fetchComments","render","article_id","user","props","comment_id","map","comment","getArticleComment","then","catch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as api from \"../../utils/api\";\nimport CommentCard from \"./comment.card\";\nimport CommentForm from \"./comment.form\";\nimport ErrorDisplay from \"../ErrorDisplay\";\nimport LoadingSign from \"../Loading/LoadingSign\";\n\nclass Comments extends React.Component {\n  state = {\n    comments: [],\n    isLoading: true,\n    err: \"\",\n  };\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n  render() {\n    const { comments, isLoading, err } = this.state;\n    const { article_id, user } = this.props;\n\n    if (isLoading) return <LoadingSign />;\n    if (err) return <ErrorDisplay err={err} />;\n    return (\n      <>\n        <CommentForm\n          addStateComment={this.addStateComment}\n          article_id={article_id}\n          user={user}\n        />\n        <ul key={comments.comment_id} className=\"artComList\">\n          {comments.map((comment) => {\n            return (\n              <CommentCard\n                comment={comment}\n                key={comment.comment_id}\n                deleteComment={this.deleteComment}\n              />\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n\n  deleteComment = (index) => {\n    this.setState((currState) => {\n      const copyArr = [...currState.comments];\n      copyArr.splice(index, 1);\n      return { comments: copyArr };\n    });\n  };\n\n  addStateComment = (newComment) => {\n    this.setState((currState) => {\n      return {\n        comments: [newComment, ...currState.comments],\n      };\n    });\n  };\n\n  fetchComments() {\n    const { article_id } = this.props;\n    api\n      .getArticleComment(article_id)\n      .then((comments) => {\n        this.setState({ comments, isLoading: false });\n      })\n      .catch((err) => {\n        this.setState({ isLoading: false, err: err.data });\n      });\n  }\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}